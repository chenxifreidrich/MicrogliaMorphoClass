x <- rnorm(10)
x
/rnom is the funtion to generate 10 different random numbers.
mean(x)
/cool/
x[3] <- NA
x
mean
mean (x)
sum(x)
sum(x, na, rm=true)
sum (x, na, rm=TRUE)
x
q()
sample(1:5, 4, replace = TRUE)
sample(1:5, 4, replace=TRUE, prob=c(0.1, 0.3, 0.4, 0.05, 0.05))
barplot(dgeom(x, 0.25), names.arg = x)
x <- 0:20
barplot(dgeom(x, 0.25), names.arg = x)
qnorm(0.5);qnorm(0.025);qnorm(0.975)
x<-rnorm(100)
x<-rnorm(100)
ks.test(x, "pnorm", mean=mean(x),sd=sd(x))
x<-rexp(100)
ks.test(x, "pnorm", mean=mean(x),sd=sd(x))
x<-rnorm(100000)
ks.test(x, "pnorm", mean=mean(x),sd=sd(x))
x<-rnorm(50, mean=5, sd=2)
y<-xnorm(1000, mean=5, sd=2)
y<-ynorm(1000, mean=5, sd=2)
y<-rnorm(1000, mean=5, sd=2)
print(sd(x))
print(sd(y))
z<-rnorm(100000, mean = 5, sd=2)
print(sd(z))
library("TxDb.Mmusculus.UCSC.mm9.knownGene")
source("bioconductor.org/biocLite.R")
source("http:/bioconductor.org/biocLite.R")
source("http://bioconductor.org/biocLite.R")
biocLite("gage","gageData","GenomicAlignments","TxDb.Mmusculus.UCSC.mm9,knownGene","org.Mm.eg.db")
biocLite("gage")
biocLite("gageData")
biocLite("GenomicAlignments")
biocLite("TxDb.Mmusculus.UCSC.mm9,knownGene")
biocLite("org.Mm.eg.db")
biocLite("pathview")
library("TxDb.Mmusculus.UCSC.mm9.knownGene")
biocLite("TxDb.Mmusculus.UCSC.mm9.knownGene")
library("org.Mm.eg.db", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("GenomicFeatures", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
biocLite("GenomicFeatures")
detach("package:GenomicFeatures", unload=TRUE)
library("GenomicFeatures", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("GenomicFeatures", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("gage", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("GenomeInfoDbData", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("GenomicAlignments", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
detach("package:GenomicFeatures", unload=TRUE)
library("GenomicFeatures", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("rtracklayer", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
biocLite("rtracklayer")
detach("package:rtracklayer", unload=TRUE)
library("rtracklayer", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
detach("package:rtracklayer", unload=TRUE)
library("rtracklayer", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
detach("package:rtracklayer", unload=TRUE)
library("rtracklayer", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
source("bioconductor.org/biocLite.R")
source("http://bioconductor.org/biocLite.R")
detach("package:rtracklayer", unload=TRUE)
biocLite("rtracklayer")
library("rtracklayer", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("rtracklayer", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
install_from_swirl("Getting and Cleaning Data")
library(swirl)
install.packages("swirl")
library("swirl")
swirl()
install_from_swirl("Getting and Cleaning Data")
swirl()
0
data<-read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
head(data)
q1<-data[,VAL==24]
data[,VAL==24]
q1<-data[VAL==24]
data[["VAL"==24]]
q1<-data[data$VAL==24]
q1<-data[data$VAL==24,]
View(q1)
install.packages("xlsx")
library("xlsx")
library("xlsx", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("xlsxjars", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("XML", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library(heatmap2)
??heatmap
??heatmap2
install.packages("heatmap3")
library(heatmap3)
?heatmap3
rm(x,y,z)
test=seq(1,10)
names(test)=seq(1,10)
tr=test[,,1]
tr=test[,1]
tr=test[1:10,1]
tr=test[1:10,,,1]
tr=test[1:10,,1]
Sys.getenv(R_MAX_VSIZE)
R.version
renviron.site
getwd()
rm(x,y,z)
load("~/Desktop/lola based coregulator finder algorithm test/GSE70440_RAW/data for depletion analysis.RData")
ko1_mm10
userUniverse
rm(x,y,z)
load("~/Desktop/analysis for sanda wt ko 20x .RData")
rm(image1_ana_filt,image12_ana_filter,image12_shape_filter,image2_ana_filt)
rm(pca_image1,pca_image1_x,pca_image12,pca_image12_x)
rm(cluster_image1,color_3)
rm(tsne_image1,tsne_image1_Y,test1a)
image1_stack=test1
rm(test1)
image2_stack=stackObjects(label_image,image)
require(EBImage)
rownames(installed.packages())
rownames(installed.packages
)
"EBImage" %in% installed.packages()
"EBImage" %in% installed.packages() !=TRUE
source("http://bioconductor.org/biocLite.R")
rstudioapi::getSourceEditorContext()$path
dirname(rstudioapi::getSourceEditorContext()$path)
?load
?paste
source('~/Desktop/Exported images of object from image 1/test.R')
source('~/Desktop/Exported images of object from image 1/test.R')
rm(test_kmeans_image1)
save.image("~/Desktop/analysis for sanda wt ko 20x v2.RData")
rm(image,image1,image1_ana,image1_label,image1_paint)
rm(image2_ana)
rm(fh_image,filtered_image,image_contrast,image_f3,image_neg_contrast)
rm(label_image,paint_all_image)
rm(t_f)
image_stack=image1_stack
rm(image_stack)
save.image("~/Desktop/Exported images of object from image 1/image12 stack objects.RData")
image_stack=image1_stack
rm(image1_stack,image2_stack)
rm(record_cell_type())
rm(record_cell_type)
save.image("~/Desktop/Exported images of object from image 1/test_data_set.RData")
rm(x,y,z)
record_cell_type=function(){
if ("EBImage" %in% installed.packages() !=TRUE){
source("http://bioconductor.org/biocLite.R")
biocLite("EBImage")
}
require(EBImage)
dir_script=dirname(rstudioapi::getSourceEditorContext()$path)
data_file_path=paste(dir,"/Data.Rdata",sep = "")
load(data_file_path)
Image_stack=Image_stack
n=dim(Image_stack)[4]
print(n)
}
record_cell_type=function(){
if ("EBImage" %in% installed.packages() !=TRUE){
source("http://bioconductor.org/biocLite.R")
biocLite("EBImage")
}
require(EBImage)
dir_script=dirname(rstudioapi::getSourceEditorContext()$path)
data_file_path=paste(dir,"/Data.Rdata",sep = "")
load(data_file_path)
Image_stack=Image_stack
n=dim(Image_stack)[4]
print(n)
}
record_cell_type()
dir_script=dirname(rstudioapi::getSourceEditorContext()$path)
test="/Data.Rdata"
paste(dir_script,test,sep = "")
abc=paste(dir_script,test,sep = "")
load(abc)
rm(abc,dir_script,image_stack,test)
record_cell_type()
source('~/Desktop/Exported images of object from image 1/test.R')
record_cell_type()
source('~/Desktop/Exported images of object from image 1/test.R')
record_cell_type()
source('~/Desktop/Exported images of object from image 1/test.R')
record_cell_type()
load("~/Desktop/Exported images of object from image 1/Data.RData")
source('~/Desktop/Exported images of object from image 1/test.R')
record_cell_type()
source('~/Desktop/Exported images of object from image 1/test.R')
record_cell_type()
source('~/Desktop/Exported images of object from image 1/test.R')
record_cell_type()
rm(image_stack)
record_cell_type()
source('~/Desktop/Exported images of object from image 1/test.R')
source('~/Desktop/Exported images of object from image 1/test.R')
record_cell_type()
rm(image_stack)
source('~/Desktop/Exported images of object from image 1/test.R')
record_cell_type()
rm(x,y,z)
load("~/Desktop/Exported images of object from image 1/Data.RData")
test=image_stack[,,,1:5]
rm(image_stack)
save.image("~/Desktop/Exported images of object from image 1/Data.RData")
image_stack=test
rm(test)
save.image("~/Desktop/Exported images of object from image 1/Data.RData")
exists(image_stack)
?exists
exists("image_stack")
source('~/Desktop/Exported images of object from image 1/test.R')
rm(x,y,z)
source('~/Desktop/Exported images of object from image 1/test.R')
rm(x,y,z)
load("~/Desktop/analysis for sanda wt ko 20x v2.RData")
rm(image1_ana,image2_ana)
rm(fh_image)
rm(filtered_image,image,image_contrast)
rm(image_f3,image_neg_contrast,image1)
rm(image1_label,image1_paint)
rm(t_f,paint_all_image,label_image)
test=seq(1,10)
test1=sample(test,30)
test1=rep(test,3)
testr=sample(test,30)
testr=sample(test1,30)
rm(test,test1,testr)
num=seq(1,(1998+2845))
target=sample(num,length(num)/3)
from_image1=target[target<=1998]
length(unique(from_image1))
from_image2=target[target>1998]
from_image2=from_image2-1998
min(from_image2)
max(from_image2)
image1_record=image1_stack[,,,from_image1]
image2_record=image2_stack[,,,from_image2]
?combine
image_stack=combine(image1_record,image2_record)
?resize
test=resize(image1_record,55,55)
display(test[,,,1])
display(image1_record[,,,1])
test=resize(image1_record,100,100)
display(test[,,,1])
test=resize(image1_record,500,500)
test=resize(image1_record,500,500)
display(test[,,,1])
display(test[,,,10])
rm(test)
test=resize(image2_record,35,35)
display(test[,,,1])
display(image2_record[,,,1])
display(image2_record[,,,2])
display(image2_record)
display(test[,,,7])
display(image2_record[,,,7])
display(test[,,,7],method = "raster")
display(image2_record[,,,9])
display(image2_record[,,,9])
image2_record=test
rm(test)
rm(image1_stack,image2_stack)
save.image("~/Desktop/Exported images of object from image 1/generating images for test.RData")
image_stack=combine(image1_record,image2_record)
image_stack[,,,1]==image1_record[,,,1]
image_stack[,,1,1]==image1_record[,,1,1]
rm(num,target,num,image1_record,image2_record,)
rm(from_image1,from_image2)
source('~/Desktop/For Sanda/Script.R')
save.image("~/Desktop/For Sanda/Data.RData")
n=dim(image_stack)[4]
source('~/Desktop/Exported images of object from image 1/exportStackObj.R')
rm(x,y,z)
test=list.files()
rm(test)
strsplit("1 2 2",split = " ")
print(list.files())
?print
?getOption
?readimage
library(EBImage)
?readImage
test=c(1,2,4)
?sapply
result=sapply(test,paste(test,"test"))
result=sapply(test,paste(test,"test",sep = ""))
paste(test,"test",sep = "")
source('~/Desktop/sanda image analysis.R')
source('~/Desktop/sanda image analysis.R')
?stackObjects
load("~/Desktop/Exported images of object from image 1/Data.RData")
rm(type_matrix,test)
test=getFrame(image_stack,3)
for (i in 1:5){ image_stack[,,,i]=getFrame(image_stack[,,,i],3)}
rm(i)
?image
hist(image_stack[,,,1])
load("~/Desktop/Exported images of object from image 1/image12 stack objects.RData")
load("~/Desktop/analysis for sanda wt ko 20x .RData")
rm(image1_ana,image1_ana_filt,image_contrast,image12_ana_filter,image12_shape_filter)
rm(pca_image1,pca_image1_x,pca_image12,pca_image12_x)
rm(cluster_image1,color_3,fh_image)
rm(image)
rm(image_neg_contrast,image1_label,image1_paint,image1_stack)
rm(test_kmeans_image1,test1,test1a)
rm(tsne_image1,tsne_image1_Y)
rm(t_f)
rm(paint_all_image)
rm(label_image)
rm(filtered_image)
rm(image2_ana,image2_ana_filt)
rm(image2_stack)
image1_f3=getFrame(image1,3)
rm(image1)
save.image("~/Desktop/test for adjust intensity of image frame 3.RData")
rm(record_cell_type())
source('~/Desktop/sanda image analysis.R')
source('~/Desktop/Exported images of object from image 1/exportStackObj.R')
source('~/Desktop/sanda image analysis.R')
source('~/Desktop/sanda image analysis.R')
hist(image_f3)
hist(image1_f3)
hist(image_f3)
display(image_f3)
source('~/Desktop/sanda image analysis.R')
?hist
hist_image1=hist(image1_f3)
library(ggplot2)
?geom_density
lines(density(image1_f3))
hist(image1_f3)
hist(image1_f3,prob=TRUE)
lines(density(image1_f3))
hist(image1_f3,prob=TRUE)
lines(density(image1_f3))
image_contrast=image_f3*1.9
image_neg_contrast=max(image_contrast)-image_contrast
hist(image_neg_contrast)
image_contrast=image_f3*1.8
image_neg_contrast=max(image_contrast)-image_contrast
hist(image_neg_contrast)
image_contrast=image_f3*2
image_neg_contrast=max(image_contrast)-image_contrast
hist(image_neg_contrast)
hist(image_neg_contrast)
display(image_neg_contrast)
image_contrast=image_f3*1.8
image_neg_contrast=max(image_contrast)-image_contrast
display(image_neg_contrast)
image_contrast=image_f3*2
image_neg_contrast=max(image_contrast)-image_contrast
display(image_neg_contrast)
rm(image_contrast,image_neg_contrast)
density(hist_image1)
density(image1_f3)
density(image_f3)
image1_contrast=image1_f3*1.9
density(image1_contrast)
0.8196/0.46667
med=density(image_f3)
med$x
median(med$x)
combine(image_f3,image_f3)
dim(combine(image_f3,image1_f3))
dim(combine(image_f3,image1_f3))[-1]
tail(dim(combine(image_f3,image1_f3)))
tail(dim(combine(image_f3,image1_f3)),1)
image_test=image()
?rename
test=combine(image_f3,image1_f3)
test_neg=max(test)-test
display(test_neg)
rm(test,test_neg)
rm(med)
rm(hist_image1)
?rbind
source('~/Desktop/sanda image analysis.R')
source('~/Desktop/sanda image analysis.R')
source('~/Desktop/sanda image analysis.R')
source('~/Desktop/sanda image analysis.R')
test=c("image_f3","image_contrast","image1_f3")
test1
test[1]
do.call(test[1])
as.name(test[1])
display(as.name(test[1]))
eval(parse(text = test[1]))
test_f=combine(image_f3,image1_f3)
test=c("image_f3","image1_f3")
eval(parse(text=text = "test_f"))[,,2]
eval(parse(text = "test_f"))[,,2]
image1_f3
assign("test_name",image_f3)
rm(test_name)
rm(test,test_f)
?assign
source('~/Desktop/sanda image analysis.R')
source('~/Desktop/sanda image analysis.R')
load("~/Desktop/analysis for sanda wt ko 20x v2.RData")
?parse
?eval
eval(parse(image))
deparse(substitute(image))
source('~/Desktop/sanda image analysis.R')
library(devtools)
source('~/Desktop/sanda image analysis.R')
devtools::create("MgMorphoClass")
usethis::create_package(path = "~/MgMorphoClass")
install.packages("roxygen2")
library(roxygen2)
devtools::document()
devtools::document(pkg = "MgMorphoClass")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
library(MgMorphoClass)
?gen_object_stack
??MgMorphoClass
t_f="/Users/xichen/desktop"
t_f="/Users/xichen/Desktop"
import_images(t_f)
MgMorphoClass::import_images(t_f)
?import_images
import_images(t_f)
